{"ast":null,"code":"var _jsxFileName = \"/Users/fedorrr/Desktop/ProjectTest/src/components/searchPanel/searchPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, AutoComplete, notification } from \"antd\";\nimport \"./searchPanel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchPanel = _ref => {\n  _s();\n\n  let {\n    setItems\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const [postsData, setPostsData] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [searchOptions, setSearchOptions] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n\n      if (data) {\n        const autoCompleteItems = data.map(_ref2 => {\n          let {\n            title,\n            id\n          } = _ref2;\n          return {\n            value: title,\n            id\n          };\n        });\n        setPostsData(data);\n        setOptions(autoCompleteItems);\n        setSearchOptions(autoCompleteItems);\n        setItems(data);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const onSelect = selectedOption => {\n    const findItem = postsData.find(_ref3 => {\n      let {\n        title\n      } = _ref3;\n      return title === selectedOption;\n    });\n    setItems(findItem ? [findItem] : []);\n  };\n\n  const onChange = data => {\n    setValue(data);\n  };\n\n  const onSearch = searchText => {\n    setSearchOptions(options.filter(_ref4 => {\n      let {\n        value\n      } = _ref4;\n      return value.includes(searchText);\n    }));\n    setItems(postsData.filter(_ref5 => {\n      let {\n        title\n      } = _ref5;\n      return title.includes(searchText);\n    }));\n  };\n\n  const close = () => {\n    setItems(postsData);\n  };\n\n  const openNotification = () => {\n    const key = `open${Date.now()}`;\n\n    const btn = /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: () => {\n        setItems(postsData);\n        notification.close(key);\n      },\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n\n    notification.open({\n      btn,\n      key,\n      onClose: close,\n      description: value,\n      message: \"Notification Title\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n      placeholder: \"input here\",\n      options: searchOptions,\n      value: value,\n      onSelect: onSelect,\n      onChange: onChange,\n      onSearch: onSearch,\n      style: {\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !value,\n      onClick: () => {\n        openNotification();\n        setValue(\"\");\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchPanel, \"eINNGtxsJKPT3VSxrBs8kX17nlI=\");\n\n_c = SearchPanel;\nexport default SearchPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPanel\");","map":{"version":3,"sources":["/Users/fedorrr/Desktop/ProjectTest/src/components/searchPanel/searchPanel.tsx"],"names":["React","useEffect","useState","axios","Button","AutoComplete","notification","SearchPanel","setItems","value","setValue","postsData","setPostsData","options","setOptions","searchOptions","setSearchOptions","fetchPosts","data","get","autoCompleteItems","map","title","id","onSelect","selectedOption","findItem","find","onChange","onSearch","searchText","filter","includes","close","openNotification","key","Date","now","btn","open","onClose","description","message","width"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, AutoComplete, notification } from \"antd\";\nimport { IData, SearchPanelProps, SetSearchOptionsType } from \"../../types\";\nimport \"./searchPanel.css\";\n\nconst SearchPanel: FC<SearchPanelProps> = ({ setItems }) => {\n    const [value, setValue] = useState(\"\");\n    const [postsData, setPostsData] = useState([]);\n    const [options, setOptions] = useState([]);\n    const [searchOptions, setSearchOptions] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const {data} = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n\n            if (data) {\n                const autoCompleteItems = data.map(({ title, id }: IData) => ({ value: title, id }));\n\n                setPostsData(data);\n                setOptions(autoCompleteItems);\n                setSearchOptions(autoCompleteItems);\n                setItems(data);\n            }\n        }\n        fetchPosts();\n    }, [])\n\n    const onSelect = (selectedOption: string) => {\n        const findItem = postsData.find(({ title }) => title === selectedOption)\n        setItems(findItem ? [findItem] : [])\n    };\n\n    const onChange = (data: string) => {\n        setValue(data);\n    };\n\n    const onSearch = (searchText: string) => {\n        setSearchOptions(options.filter(({value}: SetSearchOptionsType) => value.includes(searchText)));\n        setItems(postsData.filter(({title}: SetSearchOptionsType) => title.includes(searchText)))\n    };\n\n    const close = () => {\n        setItems(postsData)\n    };\n\n    const openNotification = () => {\n        const key = `open${Date.now()}`;\n        const btn = (\n            <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                    setItems(postsData)\n                    notification.close(key)\n                }}\n            >\n                Confirm\n            </Button>\n        );\n\n        notification.open({\n            btn,\n            key,\n            onClose: close,\n            description: value,\n            message: \"Notification Title\",\n        });\n    };\n\n    return (\n        <>\n            <AutoComplete\n                placeholder=\"input here\"\n                options={searchOptions}\n                value={value}\n                onSelect={onSelect}\n                onChange={onChange}\n                onSearch={onSearch}\n                style={{ width: 200 }}\n            />\n            <Button\n                disabled={!value}\n                onClick={() => {\n                    openNotification()\n                    setValue(\"\")\n                }}\n            >\n                Send\n            </Button>\n        </>\n    );\n};\n\nexport default SearchPanel;\n"]},"metadata":{},"sourceType":"module"}