{"ast":null,"code":"var _jsxFileName = \"/Users/fedorrr/Desktop/ProjectTest/src/components/pagination/pagination.tsx\";\nimport React from \"react\";\nimport { Button } from \"antd\";\nimport \"./pagination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    postsPerPage,\n    totalPosts,\n    setCurrentPage\n  } = _ref;\n  const pageNumbers = [];\n\n  const nextPage = () => setCurrentPage(pageNumber => pageNumber === 10 ? 10 : pageNumber + 1);\n\n  const prevPage = () => setCurrentPage(pageNumber => pageNumber === 1 ? 1 : pageNumber - 1);\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: prevPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pageItem\",\n        onClick: () => setCurrentPage(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/fedorrr/Desktop/ProjectTest/src/components/pagination/pagination.tsx"],"names":["React","Button","Pagination","postsPerPage","totalPosts","setCurrentPage","pageNumbers","nextPage","pageNumber","prevPage","i","Math","ceil","push","map","number"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,UAA8B,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,GAAiD;AACrF,QAAMC,WAA0B,GAAG,EAAnC;;AACA,QAAMC,QAAQ,GAAG,MAAMF,cAAc,CAAEG,UAAD,IAAwBA,UAAU,KAAK,EAAf,GAAoB,EAApB,GAAyBA,UAAU,GAAG,CAA/D,CAArC;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,cAAc,CAAEG,UAAD,IAAwBA,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuBA,UAAU,GAAG,CAA7D,CAArC;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUR,UAAU,GAAGD,YAAvB,CAArB,EAA2DO,CAAC,EAA5D,EAAgE;AAC5DJ,IAAAA,WAAW,CAACO,IAAZ,CAAiBH,CAAjB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQH,WAAW,CAACQ,GAAZ,CAAgBC,MAAM,iBAClB;AAEI,QAAA,SAAS,EAAC,UAFd;AAGI,QAAA,OAAO,EAAE,MAAMV,cAAc,CAACU,MAAD,CAHjC;AAAA,kBAKKA;AALL,SACSA,MADT;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR,eAaI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAER,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA5BD;;KAAML,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { PaginationType } from \"../../types\";\nimport \"./pagination.css\";\n\nconst Pagination: FC<PaginationType> = ({ postsPerPage, totalPosts, setCurrentPage }) => {\n    const pageNumbers: Array<number> = [];\n    const nextPage = () => setCurrentPage((pageNumber: number) => pageNumber === 10 ? 10 : pageNumber + 1);\n    const prevPage = () => setCurrentPage((pageNumber: number) => pageNumber === 1 ? 1 : pageNumber - 1);\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <div className=\"footer\">\n            <ul className=\"pagination\">\n                <Button onClick={prevPage}>&lt;</Button>\n                {\n                    pageNumbers.map(number => (\n                        <li\n                            key={number}\n                            className=\"pageItem\"\n                            onClick={() => setCurrentPage(number)}\n                        >\n                            {number}\n                        </li>\n                    ))\n                }\n                <Button onClick={nextPage}>&gt;</Button>\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}